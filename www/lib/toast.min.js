if ("undefined" == typeof jQuery) throw new Error("MDToast: This plugin requires jQuery"); +function (t) { var o = function (o, s) { if (this.animateTime = 250, this.message = o, this.options = s, this.toastOpenClass = "md-toast-open", this.toastModalClass = "md-toast-modal", this.TOAST_DATA = "dmu-md-toast", this.toast = t('<div class="md-toast mdt-load"></div>'), this.action = t('<button class="mdt-action"></button>'), this.toastTimeout = null, this.toast.addClass(s.type).append('<div class="mdt-message">' + o + "</div>"), s.interaction) { var i = this; this.action.text(s.actionText).on("click", function () { s.action && s.action(i) }), this.toast.append(this.action) } s.init || this.show() }; o.prototype = { constructor: o, show: function () { var o = this, s = o.options.callbacks, i = t(".md-toast"), a = t("body"); o.toast.is(":visible") || (o.toast.data(o.TOAST_DATA, o).appendTo(a), setTimeout(function () { o.toast.removeClass("mdt-load"), i.length > 0 && i.each(function () { var s = t(this).data(o.TOAST_DATA); s.hide() }), setTimeout(function () { s && s.shown && s.shown(o) }, o.animateTime), o.options.interaction ? o.options.interactionTimeout && (o.toastTimeout = setTimeout(function () { o.hide() }, o.options.interactionTimeout)) : o.options.duration && (o.toastTimeout = setTimeout(function () { o.hide() }, o.options.duration)), a.addClass(o.toastOpenClass), o.options.modal && a.addClass(o.toastModalClass) }, 10)) }, hide: function () { var o = this, s = o.options.callbacks; doc = t("body"), clearTimeout(o.toastTimeout), o.toast.addClass("mdt-load"), doc.removeClass(o.toastOpenClass).removeClass(o.toastModalClass), setTimeout(function () { o.toast.remove(), s && s.hidden && s.hidden() }, o.animateTime) } }, t.mdtoast = function (s, i) { return new o(s, t.extend({}, t.mdtoast.defaults, null, "object" == typeof i && i)) }, t.mdtoast.defaults = { init: !1, duration: 5e3, type: "default", modal: !1, interaction: !1, interactionTimeout: null, actionText: "OK", action: function (t) { t.hide() }, callbacks: {} }, t.mdtoast.type = { INFO: "info", ERROR: "error", WARNING: "warning", SUCCESS: "success" }, t.mdtoast.Constructor = o }(jQuery);
